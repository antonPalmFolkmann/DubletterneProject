@page "/resources/{ResourceId:int}"
@attribute [Authorize]
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

@if (resource != null)
{
    <div class="card" style="width: 18rem;">
        <div class="card-header">
            @resource.Title
        </div>
        <div class="card-body">
            <h5 class="card-title">Title @resource.Title</h5>
            <p class="card-text">Author: @resource.User</p>
        </div>
        <div class="card-body">
            <button type="button" class="btn btn-primary" @onclick="Edit">Edit</button>
            <button type="button" class="btn btn-danger" @onclick="Delete">Delete</button>
        </div>
    </div>
}

<div class="form-group">
    <br />
    <button type="button" class="btn btn-secondary" @onclick="Back">Back</button>
</div>

@code {
    [Parameter]
    public int? ResourceId { get; set; }

    private ResourceDetailsDTO? resource;

    protected override async Task OnParametersSetAsync()
    {
        try
        {
             if (ResourceId != 0)
            {
                resource = await Http.GetFromJsonAsync<ResourceDetailsDTO>($"api/resources/{ResourceId}");
            }

            await base.OnParametersSetAsync();
        }
        catch (Exception exception)
        {
            Console.WriteLine(exception.Message);
            resource = new ResourceDetailsDTO {
                Id = 1,
                Title = "Title",
                User = "AntonFolkmann",
                Created = DateTime.Today,
                TextParagraphs = new List<string>{"Hello", "there"},
                ImageUrl = "image.com"
            };

        }
    }

    private void Edit()
    {
        var uri = $"{NavigationManager.BaseUri}resources/{ResourceId}/edit";

        NavigationManager.NavigateTo(uri);
    }

    private async Task Delete()
    {
        if (await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete the resource?"))
        {
            await Http.DeleteAsync($"api/Resources/{ResourceId}");

            var uri = $"{NavigationManager.BaseUri}resources";

            NavigationManager.NavigateTo(uri);
        }
    }

    private void Back()
    {
        var uri = $"{NavigationManager.BaseUri}resources";

        NavigationManager.NavigateTo(uri);
    }
}
