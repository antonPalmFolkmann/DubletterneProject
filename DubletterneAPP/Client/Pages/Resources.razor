@page "/resources"
@using Core
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Text.Json
@attribute [Authorize]
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>Resources</PageTitle>

<h1>Resources</h1>

<p>
    <button class="btn btn-primary" @onclick="Create">New resource</button>
</p>

@if (resources == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>User</th>
                <th>Title</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var resource in resources)
            {
                <tr>
                    <td>@resource.User</td>
                    <td>@resource.Title</td>
                    <td><button class="btn btn-info" @onclick="@(() => View(resource))">View</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code
{
    private ResourceDTO[]? resources;

    protected override async Task OnInitializedAsync()
    {
        IList<ResourceDTO> list = new List<ResourceDTO>();
        list.Add(new ResourceDTO {
            Id = 1,
            User = "Anton",
            Title = "Resource1"
        });
        list.Add(new ResourceDTO {
            Id = 2,
            User = "Alexander",
            Title = "Resource2"
        });
        resources = list.ToArray<ResourceDTO>();
        
        string jsonString = JsonSerializer.Serialize(list[0]);

        Console.WriteLine(jsonString);
        

        //ResourceDTO[]? resources = await Http.GetFromJsonAsync<ResourceDTO[]>("Resources");
    }

    private void View(ResourceDTO resource)
    {
        var uri = $"{NavigationManager.BaseUri}resources/{resource.Id}";

        NavigationManager.NavigateTo(uri);
    }

    private void Create()
    {
        var uri = $"{NavigationManager.BaseUri}resources/create";

        NavigationManager.NavigateTo(uri);
    }
}