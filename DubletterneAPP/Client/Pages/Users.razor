@page "/users"
@using Core
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@attribute [Authorize]
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>Users</PageTitle>

<form>
    <div class="search-field">
        <input  class="search-input" type="text" placeholder="Enter title of resource" asp-for="SearchString" />
        <input type="submit" value="Search" />
    </div>
</form>

<div class="modify-btns">
    <button class="btn btn-primary" @onclick="Create">New user</button>
</div>

@if (users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>UserName</th>
                <th>View</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.Id</td>
                    <td>@user.UserName</td>
                    <td><button class="btn btn-info" @onclick="@(() => View(user))">View</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code
{
    private UserDTO[]? users;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            users = await Http.GetFromJsonAsync<UserDTO[]>($"api/Users");
        }
        catch (Exception exception)
        {
            Console.WriteLine(exception.Message);
            var list = Enumerable.Range(1, 5).Select(index => new UserDTO
            {
                Id = index,
                UserName = String.Format("Username {0}", index),
            })
            .ToArray();
            users = list;
        }
    }

    private void View(UserDTO user)
    {
        var uri = $"{NavigationManager.BaseUri}users/{user.Id}";

        NavigationManager.NavigateTo(uri);
    }

    private void Create()
    {
        var uri = $"{NavigationManager.BaseUri}users/create";

        NavigationManager.NavigateTo(uri);
    }
}

<style>

    .search-field {
        display: flex;
        justify-content: center;
        padding: 20px;
        padding-top: 10px;
        max-width: 50%;
        margin-left: auto;
        margin-right: auto;
    }

    .search-input {
        width: 100%;
        height: 40px;
    }

    .modify-btns {
        display: flex;
        justify-content: left;
        padding: 20px;
        padding-top: 10px;
        max-width: 50%;
        margin-left: auto;
        margin-right: auto;
    }


</style>